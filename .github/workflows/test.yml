name: ðŸ§ª Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸš€ Checkout code
        uses: actions/checkout@v4

      - name: ðŸŸ¢ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: ðŸ“¦ Install Dependencies
        run: npm ci && npm list mongodb-memory-server || echo "mongodb-memory-server eksik"

      - name: ðŸ§ª Run Tests with Coverage and JUnit Output
        run: npm run test:ci -- --runInBand --verbose || (echo "Testler baÅŸarÄ±sÄ±z, detaylar yukarÄ±da" && exit 1)
        env:
          NODE_ENV: test
          PORT: 3000

      - name: ðŸ“‹ Check Coverage File
        run: ls -la coverage/ && cat coverage/lcov.info || echo "Coverage dosyasÄ± bulunamadÄ±"

      - name: ðŸ“Š Upload Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: ðŸ”‘ Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: ðŸ§ª Run Tests in Docker Container
        run: |
          docker run --rm \
            -e NODE_ENV=test \
            -v ${{ github.workspace }}:/app \
            -w /app \
            ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:latest \
            sh -c "npm ci && npm test"
